////////////////////////////////////////////////////////////////////////////////
/*
	This script reads an array of inverter test data and generates coefficients 
	for the Sandia Inverter model.
	
	Inverter test data is available from the California Energy Commission at
	https://www.gosolarcalifornia.ca.gov/equipment/inverter_tests/summaries/

	The 2D input array for the coefficient generator follows the format of the 
	tables in the test report:

	* Each row has Pac, Vin, Eff at a given power level for all samples.
	* Each sample has 18 entries each for Pac, Vin, Eff:
		- 6 output power percentages 10%, 20%, 30%, 50%, 75%, 100% of rated power
		- 3 voltages Vmin, Vnom, Vmax
		
	The coefficient generator is the SSC object inv_cec_cg. The script creates,
	executes, and closes the SSC object.
	
	This is the approach SAM uses when you choose the "Inverter CEC Coefficient 
	Generator" option on the Inverter page for the Detailed PV performance model.
	It is also the approach NREL uses to build SAM's inverter library from data
	provided by the CEC in the Excel workbooks at 
	https://www.gosolarcalifornia.ca.gov/equipment/inverters.php.
	
	Tested in SAM 2020.2.29 r2.

*/


/* This example is for SMA SB3800US 2010 data with 10 samples
	https://www.gosolarcalifornia.ca.gov/equipment/inverter_tests/summaries/SMA%20SB3800US.pdf
	// Additional data for this inverter not used by the coefficient generator
	/*
	Vmin = 250 Vdc
	Vnom = 310 Vdc
	Vmax = 480 Vdc
	Maximum continuous output power = 4.05 kW
	Night tare loss = 0.08 W
	Weighted efficiency at Vnom = 95.9 %
*/
test_sample = 
[
//Samples 1-10
//Pin,Vin,Pac1,Vin1,Eff1,Pac2,Vin2,Eff2,Pac3,Vin3,Eff3,Pac4,Vin4,Eff4,Pac5,Vin5,Eff5,Pac6,Vin6,Eff6,Pac7,Vin7,Eff7,Pac8,Vin8,Eff8,Pac9,Vin9,Eff9,Pac10,Vin10,Eff10
//Vmin at 10%, 20%, 30%, 50%, 75%, 100% full load
[438.44,250.39,94.680,438.5,250.39,94.560,438.5,250.39,94.580,438.4,250.39,94.560,438.4,250.4,94.590,438.52,250.4,94.650,438.5,250.4,94.600,438.6,250.4,94.560,438.5,250.39,94.520,438.5,250.4,94.610],
[825.62,250.27,96.220,825.5,250.27,96.190,825.2,250.27,96.240,825.4,250.26,96.370,825.5,250.26,96.350,825.54,250.26,96.400,825.5,250.26,96.350,825.6,250.26,96.390,825.5,250.26,96.370,825.6,250.26,96.310],
[1213.1,253.19,96.690,1213,253.18,96.670,1213,253.18,96.720,1213,253.17,96.710,1213,253.17,96.720,1213,253.18,96.720,1213,253.18,96.740,1213,253.18,96.710,1213,253.17,96.710,1213,253.16,96.690],
[1729.7,253.05,96.750,1732,253.05,96.750,1735,253.06,96.770,1736,253.07,96.780,1736,253.07,96.790,1736,253.07,96.810,1736,253.07,96.780,1731,253.07,96.770,1730,253.08,96.780,1735,253.08,96.780],
[2679.3,252.86,96.360,2679,252.86,96.370,2679,252.87,96.380,2679,252.87,96.380,2679,252.87,96.380,2678.8,252.87,96.390,2679,252.87,96.390,2679,252.86,96.400,2679,25286,96.390,2679,252.86,96.390],
[3623.5,250.25,95.840,3624,250.24,95.830,3625,250.24,95.830,3625,250.21,95.830,3625,250.21,95.840,3624,250.22,95.840,3624,250.23,95.830,3624,250.23,95.830,3624,250.24,95.820,3624,250.24,95.830],
//Vnom at 10%, 20%, 30%, 50%, 75%, 100% full load
[452.53,310.32,93.440,452.3,310.31,93.510,452.1,310.3,93.520,452.1,310.31,93.530,452.2,310.31,93.510,452.15,310.31,93.500,452.1,310.31,93.510,452.1,310.32,93.590,452.2,310.32,93.580,452.1,310.32,93.580],
[831.9,310.29,95.460,831.5,310.26,95.490,830.6,310.23,95.460,831.7,310.22,95.510,833,310.22,95.500,833.54,310.22,95.510,833.6,310.23,95.540,831.5,310.2,95.520,832.2,310.23,95.490,833.3,310.22,95.490],
[1201.8,311.17,96.150,1202,311.18,96.150,1202,311.18,96.140,1202,311.18,96.120,1202,311.17,96.110,1202,311.17,96.130,1202,311.16,96.120,1202,311.17,96.120,1205,311.16,96.110,1207,311.16,96.120],
[1726.2,311.08,96.280,1726,311.08,96.280,1726,311.08,96.290,1726,311.08,96.280,1726,311.08,96.290,1726,311.08,96.300,1726,311.08,96.330,1726,311.08,96.350,1726,311.08,96.350,1726,311.08,96.350],
[2673.3,310.88,96.010,2673,310.89,96.030,2673,310.89,96.040,2673,310.89,96.030,2673,310.89,96.030,2673.2,310.89,96.030,2673,310.89,96.030,2673,310.9,96.030,2673,310.9,96.030,2673,310.9,96.040],
[3662,310.68,95.480,3662,310.69,95.470,3662,310.68,95.470,3662,310.68,95.470,3663,310.68,95.480,3663,310.68,95.470,3663,310.68,95.470,3662,310.68,95.470,3662,310.67,95.480,3663,310.68,95.480],
//Vmax at 10%, 20%, 30%, 50%, 75%, 100% full load
[435.5,478.98,91.440,439.1,478.97,91.520,441.6,478.98,91.460,442,478.98,91.530,442.1,478.99,91.730,442.12,478.98,91.660,442.1,478.97,91.500,442,478.97,91.470,442,478.98,91.600,442,478.98,91.650],
[819.39,479.01,94.450,819.5,479.01,94.410,819.5,479.01,94.370,819.4,479.01,94.400,819.4,479.02,94.340,819.37,479.02,94.400,819.5,479.02,94.380,819.4,479.02,94.360,819.4,479.02,94.330,819.5,479.01,94.360],
[1203.3,478.98,95.290,1203,478.98,95.250,1203,478.98,95.250,1203,478.99,95.330,1203,478.98,95.320,1203.3,478.98,95.320,1203,478.98,95.290,1203,478.98,95.210,1203,478.98,95.280,1203,478.99,95.280],
[1727,478.81,95.540,1728,478.79,95.570,1728,478.78,95.560,1728,478.79,95.550,1728,478.78,95.600,1727.6,478.8,95.600,1728,478.81,95.610,1728,478.81,95.630,1728,478.81,95.590,1728,478.81,95.590],
[2672.6,478.76,95.540,2672,478.76,95.550,2672,478.77,95.560,2672,478.77,95.560,2672,478.77,95.550,2672.8,478.77,95.570,2673,478.77,95.550,2673,478.77,95.550,2673,478.77,95.550,2673,478.77,95.560],
[3630.7,478.62,95.080,3631,478.62,95.090,3631,478.62,95.090,3630,478.62,95.090,3631,478.62,95.080,3630.8,478.62,95.080,3630,478.62,95.080,3631,478.63,95.080,3631,478.62,95.070,3630,487.62,95.080],
];

/*
// This example for the SMA SB3800TL-US-22 (240V) inverter has 5 samples instead of 10.
// https://www.gosolarcalifornia.ca.gov/equipment/inverter_tests/summaries/SMA%20SB3800TL-US-22%20(240V).pdf
test_sample = [
//Samples 1-5
//Pin,Vin,Pac1,Vin1,Eff1,Pac2,Vin2,Eff2,Pac3,Vin3,Eff3,Pac4,Vin4,Eff4,Pac5,Vin5,Eff5
//Vmin at 10%, 20%, 30%, 50%, 75%, 100% full load
[339,172.2,93.132,339,172.21,92.877,339,172.19,93.132,339,172.21,93.132,339,172.19,93.132],
[764,172.22,95.500,765,172.18,95.625,765,172.2,95.625,765,172.21,95.506,764,172.2,95.381],
[1148,172.19,95.906,1147,172.21,95.743,1149,172.21,95.830,1148,172.2,95.826,1148,172.18,95.826],
[1875,172.51,95.957,1876,172.5,96.008,1876,172.52,96.008,1876,172.52,95.959,1874,172.5,95.955],
[2713,172.51,95.900,2714,172.51,95.901,2714,172.51,95.901,2714,172.52,95.867,2715,172.52,95.936],
[3692,172.51,95.573,3692,172.5,95.623,3690,172.5,95.571,3690,172.49,95.571,3694,172.5,95.600],
//Vnom at 10%, 20%, 30%, 50%, 75%, 100% full load
[358,397.04,93.473,360,397.03,93.750,359,397.03,93.490,361,398.36,94.256,362,398.37,94.271],
[789,398.53,96.459,790,398.5,96.455,789,398.49,96.459,790,398.48,96.341,790,398.48,96.341],
[1225,398.61,97.222,1224,398.62,97.143,1225,398.61,97.222,1225,398.61,97.222,1224,398.59,97.297],
[1930,398.66,97.131,1931,398.68,97.182,1930,398.67,97.180,1930,398.66,97.131,1930,398.67,97.131],
[2787,398.75,97.176,2787,398.76,97.210,2787,398.73,97.210,2788,398.76,97.177,2785,398.77,97.140],
[3923,398.91,97.043,3921,398.88,97.016,3920,398.89,97.041,3920,398.88,97.041,3921,398.88,97.042],
//Vmax at 10%, 20%, 30%, 50%, 75%, 100% full load
[359,478.56,93.005,360,478.54,93.023,360,478.53,93.023,354,477.03,92.188,353,477.06,92.167],
[788,478.64,95.631,791,478.61,95.763,789,478.61,95.869,782,477.07,95.134,782,477.08,95.134],
[1190,478.64,96.513,1190,478.6,96.513,1190,478.6,96.513,1191,478.65,96.594,1189,478.65,96.510],
[1935,478.79,96.895,1935,478.83,96.895,1934,478.79,96.894,1936,478.81,96.897,1933,478.8,96.892],
[2796,478.86,97.016,2796,478.88,96.949,2797,478.87,96.983,2796,478.87,96.949,2798,478.88,97.018],
[3808,478.94,96.896,3809,478.96,96.921,3809,478.94,96.921,3808,478.95,96.896,3809,478.96,96.921]
];
*/

Paco = 3800;

// Create SAM SDK Simulation Core (SSC) object
obj = ssc_create();

// Set inputs of inv_cec_cg object
ssc_var(obj, 'inv_cec_cg_paco', Paco); // in W
ssc_var(obj, 'inv_cec_cg_sample_power_units', 0); // kW test data
ssc_var(obj, 'inv_cec_cg_test_samples', test_sample);

// Execute
result= ssc_exec(obj, 'inv_cec_cg', {'show_dialog'=false, 'hold_dialog'=false} );

// Display results
if(result == 0)
{
	Pdco = ssc_var(obj, 'Pdco');
	Vdco = ssc_var(obj, 'Vdco');
	Pso = ssc_var(obj, 'Pso');
	c0 = ssc_var(obj, 'c0');
	c1 = ssc_var(obj, 'c1');
	c2 = ssc_var(obj, 'c2');
	c3 = ssc_var(obj, 'c3');

	outln(sprintf( 'Pdco=%g Vdco=%g Pso=%g c0=%g c1=%g c2=%g, c3=%g', Pdco,Vdco,Pso,c0,c1,c2,c3 ) );
}
else
{
	outln('Error: ' + result );
}

ssc_free(obj);
