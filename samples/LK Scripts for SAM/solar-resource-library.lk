////////////////////////////////////////////////////////////////////////////////
/*
	This script is a reference for interacting with the solar resource library
	on the Location and Resource page for SAM's solar performance models.

	For more information about weather file folders and libraries, see the
	"Folders and Libraries" topic under "Weather Data" in SAM's Help system.

	This script creates two folders on your desktop: ../Desktop/sam-library-test1 
	and ..Desktop/sam-library-test2 that you should delete after your function tests.

	Tested in SAM 2020.2.29 r2
*/
////////////////////////////////////////////////////////////////////////////////

// Given the full path and name of weather file f that is in the solar resource
// library, set the solar resource library to f after checking that it has a 
// valid extension and that it exists in the library.
// Return true on success and false on fail.
function set_library_robust ( f )
{

	f = lower( f );
	if ( strpos( f, '.' ) < 0 ) { return false; }
	key = file_only( f );
	ext = ext_only( f );
	if ( ext == 'csv' || ext == 'epw' || ext == 'tm2' )
	{ key = replace( key, '.' + ext , '' ); }
	else { return false; }
	
	items = library( 'SolarResourceData' );
	item_pos = items ?@ key;
	if ( item_pos > -1 ) 
	{
		set( 'solar_resource', key ); 
		return true;
	}
	else { return false; } 

}

// A simpler version of the previous function, sets the solar resource library
// to f without any checks.
function set_library_lite ( f )
{
	key = file_only( f );
	key = replace( key, '.' + ext_only( f ), '' );
	set( 'solar_resource', key ); 
}

// Add new path to to the list of library folders. Use this function to add 
// files in a folder on the computer to SAM's solar resource library.
function add_library_folder ( path )
{
	x = get_settings('solar_data_paths');
	x = replace( x, '\\', '/' ); // replace Windows backslashes with forward slashes
	path = replace( path, '\\', '/');
	// add new path if provided and it doesn't already exist in the library
	if ( path != '' && dir_exists( path ) && ( strpos( x, path ) < 0 ) )
	{
		if ( x != '' ) { x += ';'; }
		x += path;
		set_settings('solar_data_paths', x );
		rescanlibrary( 'solar' ); 
		show_page('Location and Resource'); // refresh page to see new folder in library list
		return true;
	}
	else { return false; }
}	       

// Remove a folder from the list of library folders.
function remove_library_folder ( path )
{
	x = get_settings('solar_data_paths');
	x = replace( x, '\\', '/' ); // replace Windows backslashes with forward slashes
	path = replace( path, '\\', '/');
	if ( strpos( x, path ) > -1 )
	{
		x = replace( x, path, '' );
		if ( strpos ( x, ';;' ) > -1 ) { x= replace( x, ';;', ';' ); }
		set_settings( 'solar_data_paths', x );
		rescanlibrary( 'solar' );
		show_page( 'Location and Resource' ); // refresh page to see new folder in library list
		return true;
	}
	else
	{
		return false;
	}	
}

// Default solar resource folder for sample weather files for this version of SAM.
// This folder is intended to store a few files with the initial software installation.
// Use the functions above to add and remove weather file folders so that they are 
// accessible to any version of SAM instead of storing your files in the default folder.
solar_resource_dir = replace( runtimedir(), '/runtime', '') + '/solar_resource/';
test_file = solar_resource_dir + 'phoenix_az_33.450495_-111.983688_psmv3_60_tmy.csv';

// Test set_library functions.
outln( 'Function Tests' );
outln( '=====================================' );
outln( 'Set library robust function test: ' + set_library_robust( test_file ) );
// set_library_lite( test_file );

// Test add folder function by creating an empty folder and adding it. To be 
// useful, you would add a folder that contains weather files instead of an 
// empty one (or you could add weather files to the folder after adding it).
testdir = homedir() + '/Desktop/sam-library-test1';
out( 'Add library folder function test (' + testdir + '): ' );
if ( mkdir( testdir, false ) )
{
	ok = add_library_folder( testdir );
	outln( ok ); 
}
else
{
	outln ( 'Could not create folder.' ); 
}

// Test remove folder function
testdir = homedir() + '/Desktop/sam-library-test2';
mkdir( testdir, false );
add_ok = add_library_folder( testdir );
if ( add_ok ) 
{
	ok = remove_library_folder( testdir );
}
else
{
	ok = 'Failed to add folder for test: ' + testdir;
}	
outln( 'Remove library folder function test (' + testdir + '): ' + ok );
outln( '' );

// Show solar resource library file location.
// SAM uses this hidden file to store weather file header data and the file location data.
// Each time a file is added or removed from the solar resource library, SAM 
// refreshes the data in the file. You should not edit this file, but it may
// be helpful to know where it is.
// The solar resource file stores a copy of header data from all the weather files
// in the library so that SAM can quickly display the data in the user interface.
outln( 'Solar resource library file location: ' );
outln( userlocaldatadir() + '/SolarResourceData.csv' );
outln( '' );

// Data from solar resource library file that SAM displays on the Location and Resource page.
// Note that this data is a copy of data the weather file itself that SAM uses for simulations.
outln( 'Data From Solar Resource Library File' );
outln( '=====================================' );
outln('File name = ' + get('solar_data_file_name') );
outln('Station ID = ' + get('station_id') );
outln('Data source = ' + get('solar_data_source') );
outln('Elevation = ' + get('elev') );
outln('Latitude = ' + get('lat') );
outln('Longitude = ' + get('lon') );
outln('Time zone = ' + get('tz') );
outln( '' );

// Data calculated in user interface for display on Location and Resource page.
// These values are for user reference in the interface and are not used by the
// performance models in simulations.
outln( 'Data Calculated in User Interface' );
outln( '=====================================' );
outln('Global horizontal = ' + get('annual_global') );
outln('Direct normal (beam) = ' + get('annual_beam') );
outln('Diffuse horizontal = ' + get('annual_diffuse') );
outln('Average temperature = ' + get('annual_tdry') );
outln('Average wind speed = ' + get('annual_wspd') );
outln('Maximum snow depth = ' + get('annual_snow') );
outln('Annual albedo = ' + get('annual_albedo') );
