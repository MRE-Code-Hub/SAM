{
    "Name": "Battery REopt Optimization",
    "Width": 1055.0,
    "Height": 158.0,
    "FormObjects": {
        "Label": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "batt_size_label3"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 12.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 21.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 1029.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 42.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "Automatically size the battery bank and calculate an hour-by-hour dispatch schedule using the REopt API web service. This sends values of SAM inputs to the service, runs a REopt optimization on the service, and modifies SAM battery size and dispatch inputs with results from the REopt run. See Help for details."
                },
                "TextColour": {
                    "Type": 4.0,
                    "Color": {
                        "Red": 0.0,
                        "Green": 0.0,
                        "Blue": 0.0,
                        "Alpha": 255.0
                    }
                },
                "Bold": {
                    "Type": 2.0,
                    "Boolean": 0.0
                },
                "FontSize": {
                    "Type": 3.0,
                    "Integer": 0.0
                },
                "WordWrap": {
                    "Type": 2.0,
                    "Boolean": 1.0
                },
                "AlignRight": {
                    "Type": 2.0,
                    "Boolean": 0.0
                },
                "AlignTop": {
                    "Type": 2.0,
                    "Boolean": 1.0
                }
            }
        },
        "Button": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "call_reopt"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 411.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 72.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 198.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 28.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "Get size and dispatch"
                },
                "TabOrder": {
                    "Type": 3.0,
                    "Integer": 2.0
                }
            }
        },
        "GroupBox": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "object 4"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 6.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 3.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 1042.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 150.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "Optimal Sizing and Dispatch from REopt"
                },
                "Bold": {
                    "Type": 2.0,
                    "Boolean": 1.0
                }
            }
        },
        "Label": {
            "Visible": 1.0,
            "ObjectProperties": {
                "Name": {
                    "Type": 5.0,
                    "String": "object 7"
                },
                "X": {
                    "Type": 3.0,
                    "Integer": 12.0
                },
                "Y": {
                    "Type": 3.0,
                    "Integer": 108.0
                },
                "Width": {
                    "Type": 3.0,
                    "Integer": 1029.0
                },
                "Height": {
                    "Type": 3.0,
                    "Integer": 30.0
                },
                "Tool Tip": {
                    "Type": 5.0,
                    "String": ""
                },
                "Caption": {
                    "Type": 5.0,
                    "String": "The REopt optimization uses a different weather file than the file on the Location and Resource page."
                },
                "TextColour": {
                    "Type": 4.0,
                    "Color": {
                        "Red": 0.0,
                        "Green": 0.0,
                        "Blue": 0.0,
                        "Alpha": 255.0
                    }
                },
                "Bold": {
                    "Type": 2.0,
                    "Boolean": 0.0
                },
                "FontSize": {
                    "Type": 3.0,
                    "Integer": 0.0
                },
                "WordWrap": {
                    "Type": 2.0,
                    "Boolean": 1.0
                },
                "AlignRight": {
                    "Type": 2.0,
                    "Boolean": 0.0
                },
                "AlignTop": {
                    "Type": 2.0,
                    "Boolean": 1.0
                }
            }
        }
    },
    "VarDatabase": {},
    "Equations": {},
    "Callbacks": {
        "1": "on_change{'call_reopt'} = define()",
        "2": "{",
        "3": "\t// check inputs before making REopt call",
        "4": "\twf_len = 60 / ${ui_step_minutes} * 8760;",
        "5": "\tload_len = #(${load});",
        "6": "\tif (wf_len != load_len) ",
        "7": "\t{",
        "8": "\t\tmsgbox('Inconsistent time steps.\\nWeather file and load number of records must be the same.');",
        "9": "\t\texit;",
        "10": "\t}",
        "11": "\tif (load_len != 8760 * 4 && load_len != 8760 * 2 && load_len != 8760) ",
        "12": "\t{",
        "13": "\t\tmsgbox('Incorrect time steps.\\nSimulation timestep must be 15, 30 or 60 minutes.');",
        "14": "\t\texit;",
        "15": "\t}",
        "16": "",
        "17": "\tif (!value('batt_dispatch_auto_can_gridcharge'))",
        "18": "\t{",
        "19": "\t\tchange = yesno('REopt requires that battery can charge from grid.\\nChange Battery Can Charge from Grid on Battery Dispatch page automatically? Click No to exit optimization.');",
        "20": "\t\tif (change)",
        "21": "\t\t{",
        "22": "\t\t\tvalue('batt_dispatch_auto_can_gridcharge', true);",
        "23": "\t\t\trefresh();",
        "24": "\t\t}",
        "25": "\t\telse ",
        "26": "\t\t{",
        "27": "\t\t\texit;",
        "28": "\t\t}",
        "29": "\t}",
        "30": "\tif (!value('batt_dispatch_auto_can_charge'))",
        "31": "\t{",
        "32": "\t\tchange = yesno('REopt requires that battery can charge from PV.\\nChange Battery Can Charge from System input on Battery Dispatch page automatically? Click No to exit optimization.');",
        "33": "\t\tif (change)",
        "34": "\t\t{",
        "35": "\t\t\tvalue('batt_dispatch_auto_can_charge', true);",
        "36": "\t\t\trefresh();",
        "37": "\t\t}",
        "38": "\t\telse ",
        "39": "\t\t{",
        "40": "\t\t\texit;",
        "41": "\t\t}",
        "42": "\t}",
        "43": "\tif ( value('batt_duration_choice') != 0 )",
        "44": "\t{",
        "45": "\t\tchange = yesno('REopt requires desired battery size in kWh.\\nChange Desired Bank Capacity units on Battery Cell and System page from h to kWh automatically? Click No to exit the optimization.');",
        "46": "\t\tif (change)",
        "47": "\t\t{",
        "48": "\t\t\tvalue('batt_bank_size_ui',value('batt_computed_bank_capacity'));",
        "49": "\t\t\tvalue('batt_duration_choice',0);",
        "50": "\t\t\trefresh();",
        "51": "\t\t}",
        "52": "\t\telse",
        "53": "\t\t{",
        "54": "\t\t\texit;",
        "55": "\t\t}",
        "56": "\t}",
        "57": "\t",
        "58": "\tbatt_kw_original = value('batt_bank_power');",
        "59": "\tbatt_kwh_original = value('batt_bank_size_ui');",
        "60": "\tdispatch_original_mode = value('batt_dispatch_choice_ui'); //store original batt dispatch mode",
        "61": "",
        "62": "\t// temporarily size to 0 to remove battery costs from total_installed_cost for REopt API call",
        "63": "\tvalue('batt_bank_power', 0);",
        "64": "\tvalue('batt_bank_size_ui', 0);",
        "65": "\tvalue('batt_custom_dispatch', ${load}); //reset size of dispatch array to match load and wf",
        "66": "\t",
        "67": "\treopt = reopt_size_battery();",
        "68": "",
        "69": "\tif (reopt.error)",
        "70": "\t{",
        "71": "\t\tif (strlen(reopt.error) > 0)",
        "72": "\t\t{",
        "73": "\t\t\tmsgbox(reopt.error);",
        "74": "\t\t}",
        "75": "\t\telse",
        "76": "\t\t{",
        "77": "\t\t\tmsgbox('API timed out.\\nThe REopt API timed out. Please try again later.');",
        "78": "\t\t}",
        "79": "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input",
        "80": "\t\tvalue('batt_bank_power', batt_kw_original);",
        "81": "\t\tvalue('batt_bank_size_ui', batt_kwh_original); ",
        "82": "\t\trefresh();",
        "83": "\t\texit;",
        "84": "\t}",
        "85": "\t",
        "86": "\ty = reopt.response;",
        "87": "",
        "88": "\tif (y.outputs == null || y.outputs.Scenario == null)",
        "89": "\t{",
        "90": "\t\tmsgbox('Error in REopt API response.\\nTry again later or try another system design.');",
        "91": "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input",
        "92": "\t\tvalue('batt_bank_power', batt_kw_original);",
        "93": "\t\tvalue('batt_bank_size_ui', batt_kwh_original); ",
        "94": "\t\trefresh();",
        "95": "\t\texit;",
        "96": "\t}",
        "97": "",
        "98": "\tif (y.outputs.Scenario.status != 'optimal')",
        "99": "\t{",
        "100": "\t\tmsgbox('REopt could not find optimal battery size and dispatch.\\n' + y.outputs.Scenario.status);",
        "101": "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input",
        "102": "\t\tvalue('batt_bank_power', batt_kw_original);",
        "103": "\t\tvalue('batt_bank_size_ui', batt_kwh_original); ",
        "104": "\t\trefresh();",
        "105": "\t\texit;",
        "106": "\t}",
        "107": "",
        "108": "\tpv = y.outputs.Scenario.Site.PV;",
        "109": "\tbatt = y.outputs.Scenario.Site.Storage;",
        "110": "\telec = y.outputs.Scenario.Site.ElectricTariff;",
        "111": "",
        "112": "\tif (batt.size_kw == null && batt.size_kwh == null)",
        "113": "\t{",
        "114": "\t\tapply_str = 'Optimal capacity: ' + to_string(0) + ",
        "115": "\t\t\t' kWh\\nOptimal power: ' + to_string(0) + ' kW\\n\\nApply results?';",
        "116": "\t\tapply = yesno('REopt found that optimal system has no storage.\\n' + apply_str);",
        "117": "\t\tif (apply)",
        "118": "\t\t{",
        "119": "\t\t\tvalue('batt_bank_power', 0.0);",
        "120": "\t\t\tvalue('batt_bank_size_ui', 0.0);",
        "121": "\t\t}",
        "122": "\t\telse",
        "123": "\t\t{",
        "124": "\t\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input",
        "125": "\t\t\tvalue('batt_bank_power', batt_kw_original);",
        "126": "\t\t\tvalue('batt_bank_size_ui', batt_kwh_original); ",
        "127": "\t\t}",
        "128": "\t\trefresh();",
        "129": "\t\texit;",
        "130": "\t}",
        "131": "",
        "132": "\tapply_str = 'Optimal capacity: ' + to_string(batt.size_kwh) + ",
        "133": "\t\t' kWh\\nOptimal power: ' + to_string(batt.size_kw) + ' kW\\n\\nChange ' +",
        "134": "\t\t'battery capacity, battery power, and battery dispatch battery power target inputs with to optimal values from REopt?\\n\\nClick Yes to change the inputs. Click No to continue without changing inputs.';",
        "135": "\tapply = yesno('Success! REopt found an optimal battery size and time series dispatch schedule.\\n' + apply_str);",
        "136": "\tif ( apply )",
        "137": "\t{",
        "138": "\t\tvalue('batt_bank_power', batt.size_kw);",
        "139": "\t\tvalue('batt_bank_size_ui', batt.size_kwh);",
        "140": "\t\trefresh();",
        "141": "\t}",
        "142": "\telse",
        "143": "\t{",
        "144": "\t\tvalue('batt_dispatch_choice_ui',dispatch_original_mode); //make sure UI input is consistent with SSC input",
        "145": "\t\tvalue('batt_bank_power', batt_kw_original);",
        "146": "\t\tvalue('batt_bank_size_ui', batt_kwh_original); ",
        "147": "\t\trefresh();",
        "148": "\t\texit;",
        "149": "\t}",
        "150": "",
        "151": "\tif (batt.size_kw == 0 && batt.size_kwh == 0)",
        "152": "\t{",
        "153": "\t\texit;",
        "154": "\t}",
        "155": "",
        "156": "\tbatt_to_grid = null;",
        "157": "\tif (batt.year_one_to_grid_series_kw)",
        "158": "\t{",
        "159": "\t\tbatt_to_grid = batt.year_one_to_grid_series_kw;",
        "160": "\t}",
        "161": "\tbatt_to_load = batt.year_one_to_load_series_kw;",
        "162": "\tpv_charge = pv.year_one_to_battery_series_kw;",
        "163": "\tgrid_charge = elec.year_one_to_battery_series_kw;",
        "164": "",
        "165": "\tvalue('batt_dispatch_choice_ui', 2); // make sure UI input is consistent with SSC input",
        "166": "\tvalue('batt_dispatch_excl', value('batt_dispatch_choice_ui'));",
        "167": "\t",
        "168": "\tload = ${load};",
        "169": "\t",
        "170": "\tdispatch = alloc(#load);",
        "171": "\tfor (i=0; i<#grid_charge; i++)",
        "172": "\t{",
        "173": "\t\tif (batt_to_grid)",
        "174": "\t\t{",
        "175": "\t\t\tdischarge = batt_to_grid[i] + batt_to_load[i];",
        "176": "\t\t} ",
        "177": "\t\telse",
        "178": "\t\t{",
        "179": "\t\t\tdischarge = batt_to_load[i];",
        "180": "\t\t}",
        "181": "\t\tcharge = -pv_charge[i] - grid_charge[i];",
        "182": "\t\t",
        "183": "\t\tdispatch[i] = discharge + charge;",
        "184": "\t}",
        "185": "",
        "186": "\tvalue('batt_custom_dispatch', dispatch);",
        "187": "\tvalue('batt_dispatch_charge_only_system_exceeds_load', false);",
        "188": "\tvalue('batt_dispatch_discharge_only_load_exceeds_system', false);",
        "189": "\trefresh();",
        "190": "",
        "191": "};"
    }
}